#! /usr/bin/env nix-shell
#! nix-shell -i nu -p bluez nushell
def check_connected [device_id: string] {
  return (bluetoothctl info $device_id
  | find "Connected: "
  | split row ":"
  | get 1
  | $in !~ no)
}
let device_id = (bluetoothctl devices | find "Echo Dot-277" | split row " " | get 1)
mut connected = check_connected $device_id
mut retry_count = 0
let log_file = mktemp -p /tmp/happy/ "bluez_XXXX.log"

$"Starting connecting to Happy Dot at ($device_id)" | save -f $log_file
$"Is Happy Dot connected? -> ($connected)" | save -a $log_file

while ($device_id | is-not-empty) and not $connected {
  $"Attempting to connect" | save -a $log_file
  "===============\nBluetooth output:\n" | save -a $log_file
  bluetoothctl connect $device_id out+err>> $log_file
  "===============" | save -a $log_file
  $connected = (check_connected $device_id)
  if $connected { "Connected to happy dot :D" | save -a $log_file }
  if $retry_count > 5 and not $connected {
    "Retry cound exhausted, exiting..." | save -a $log_file
    try { hyprctl notify 0 5000 0 "Failed to connect to echo dot" }
    break
  }
  $retry_count = $retry_count + 1
  sleep 100ms
}

# vim: filetype=nu
